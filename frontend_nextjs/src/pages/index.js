import { useEffect } from "react";
import styles from "@/styles";
import { useGlobalContext } from "../context";
import { useSubgraph } from "@/hooks/subgraph";
import CollectionRow from "../components/CollectionRow";
import Spinner from "@/components/Spinner";
import Head from "next/head";
import { Contract } from "ethers";

// export default function Home() {
//   return <div>chichi</div>;
// }

export default function Home() {
  const { updateUI, setAttributesCount, nftContract, nft2Contract } =
    useGlobalContext();
  const { loading, error, data, refetch } = useSubgraph();

  const collectionsArr = data ? data.createdCollections : null;

  const listingsArr = data ? data.listedNFTs : null;

  useEffect(() => {
    refetch();
  }, [updateUI, refetch]);

  //for each collection: calculate current listing nfts' attributes
  //and set the attributes object to the context
  useEffect(() => {
    const calculateAttributes = async (collections, listings) => {
      const _attributesCount = {};
      for (let k = 0; k < collections.length; k++) {
        const _collectionAddr = collections[k].nftContractAddr;
        const _listings = listings.filter(
          (listing) => listing.nftContractAddr === _collectionAddr
        );
        const _theNftContract = [nftContract, nft2Contract].find(
          (_nftContract) =>
            //ethers.js v6
            //_nftContract.target.toLowerCase() === _collectionAddr
            _nftContract.address.toLowerCase() === _collectionAddr
        );
        //const _theNftContract = nftContract;
        const attributesObj = {};
        for (let i = 0; i < _listings.length; i++) {
          const nftURI = await _theNftContract.tokenURI(
            _listings[i].tokenId.toString()
          );
          const { attributes } = await (await fetch(nftURI)).json();
          for (let j = 0; j < attributes.length; j++) {
            const { trait_type, value } = attributes[j];
            if (trait_type in attributesObj) {
              if (value in attributesObj[trait_type]) {
                attributesObj[trait_type][value] += 1;
              } else {
                attributesObj[trait_type][value] = 1;
              }
            } else {
              attributesObj[trait_type] = { [value]: 1 };
            }
          }
        }
        _attributesCount[_collectionAddr] = attributesObj;
      }
      setAttributesCount(_attributesCount);
    };
    if (collectionsArr && listingsArr) {
      calculateAttributes(collectionsArr, listingsArr);
    }
  }, [listingsArr, nft2Contract, nftContract]);

  return (
    <>
      <Head>
        <title>OURS NFT MARKETPLACE</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/nft.png" />
      </Head>

      <div className={`${styles.pageContainer} ${styles.homePageContainer}`}>
        <div className={styles.homeCollectionContainer}>
          <div className={styles.homeBigTextContainer}>
            <p className={styles.formTextBig}>Our Collections</p>
          </div>
          <div className={styles.homeCollectionTable} role="table">
            <div className={styles.homeCollectionHeadRow}>
              <div className={styles.homeCollectionRowItemBig}>Collection</div>
              <div className={styles.homeCollectionRowItem}>By</div>
              <div className={styles.homeCollectionRowItem}>Floor Price</div>
              <div className={styles.homeCollectionRowItem}>Max Supply</div>
            </div>
            {loading ? (
              <div className="m-4">
                <Spinner />
              </div>
            ) : !collectionsArr ? (
              <div>No Collections</div>
            ) : (
              collectionsArr.map((collection, id) => (
                <CollectionRow
                  key={id}
                  collection={collection}
                  listingsArr={listingsArr.filter(
                    (listing) =>
                      listing.nftContractAddr === collection.nftContractAddr
                  )}
                />
              ))
            )}
          </div>
        </div>
      </div>
    </>
  );
}
